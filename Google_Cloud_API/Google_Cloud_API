{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Google_Cloud_API","provenance":[],"collapsed_sections":["FljGpDNfiynn"],"authorship_tag":"ABX9TyP3m5hlB1uZvvR5g+J+wzac"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"FljGpDNfiynn","colab_type":"text"},"source":["#Mount the google drive!"]},{"cell_type":"code","metadata":{"id":"wnqWPW8adp_l","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":121},"executionInfo":{"status":"ok","timestamp":1596510898467,"user_tz":-480,"elapsed":42847,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"c53163d6-0699-476b-e69e-a0e81292a21a"},"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bN6k6nddi8X9","colab_type":"text"},"source":["# Install packages "]},{"cell_type":"code","metadata":{"id":"HPiMAYPnKZLf","colab_type":"code","colab":{}},"source":["!pip3 install -U pip google-cloud-vision"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1BPzQVm-jD_-","colab_type":"text"},"source":["# Log in and set environment variable"]},{"cell_type":"code","metadata":{"id":"lFwtzESTiL7l","colab_type":"code","colab":{}},"source":["!gcloud auth login 'your account'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"U1e0obAvinjk","colab_type":"code","colab":{}},"source":["!gcloud config set project your_project_ID"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"AcRMO_enif_k","colab_type":"code","colab":{}},"source":["!gcloud config list project"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qNAq44HniGXF","colab_type":"code","colab":{}},"source":["!gcloud auth list"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"M1Ev2yZwhm9J","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596510997525,"user_tz":-480,"elapsed":2425,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["!gcloud services enable vision.googleapis.com"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"7v0rcmTbN7s4","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596510998339,"user_tz":-480,"elapsed":648,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["import os\n","os.environ[\"GOOGLE_APPLICATION_CREDENTIALS\"]=\"/content/gdrive/My Drive/your_service_account.json\""],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"VyDRCC8pfka_","colab_type":"code","colab":{}},"source":["import os \n","print(os.environ['GOOGLE_APPLICATION_CREDENTIALS']) "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qh-8cWJDko-3","colab_type":"text"},"source":["# Import all the packages needed "]},{"cell_type":"code","metadata":{"id":"928QGo9cKdSh","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596511023460,"user_tz":-480,"elapsed":736,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["from google.cloud import vision\n","from google.cloud import storage\n","import io"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"k_lRuJKKk8Ju","colab_type":"text"},"source":["# Use the API!!!"]},{"cell_type":"markdown","metadata":{"id":"vIdMaEUDlAYX","colab_type":"text"},"source":["## Face detection"]},{"cell_type":"code","metadata":{"id":"5Av7fT2vGt92","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596511139582,"user_tz":-480,"elapsed":845,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["def face_detection(image_name):\n","  image_uri = 'gs://cloud_vision_api_use_1/'+image_name\n","  client = vision.ImageAnnotatorClient()\n","  response = client.annotate_image({\n","    'image': {'source': {'image_uri': image_uri}},\n","    'features': [{'type': vision.enums.Feature.Type.FACE_DETECTION}],\n","  })\n","  return response"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"eZc9-MQDLaRf","colab_type":"code","colab":{}},"source":["response = face_detection('selfie.jpeg')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ovhx0LyOKYGf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1596442625840,"user_tz":-480,"elapsed":1016,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"aa390de6-853d-4856-bd16-dc3f5f2a242a"},"source":["counter = 1\n","for face in response.face_annotations:\n","  # print('='*5,'\\n',face.bounding_poly)\n","  print('Face ',counter,': ')\n","  for vertice in face.bounding_poly.vertices:\n","    print('({},{})'.format(vertice.x,vertice.y))\n","  counter += 1"],"execution_count":55,"outputs":[{"output_type":"stream","text":["Face  1 : \n","(83,420)\n","(466,420)\n","(466,865)\n","(83,865)\n","Face  2 : \n","(744,448)\n","(893,448)\n","(893,621)\n","(744,621)\n","Face  3 : \n","(668,321)\n","(760,321)\n","(760,428)\n","(668,428)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"gts5fphVliEg","colab_type":"text"},"source":["## Landmark detection"]},{"cell_type":"code","metadata":{"id":"NAa5xjvqF8bn","colab_type":"code","colab":{}},"source":["image_uri = 'gs://cloud-vision-codelab/eiffel_tower.jpg'\n","\n","client = vision.ImageAnnotatorClient()\n","image = vision.types.Image()\n","image.source.image_uri = image_uri\n","\n","response = client.landmark_detection(image=image)\n","\n","for landmark in response.landmark_annotations:\n","    print('=' * 30)\n","    print(landmark)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"awKAzrKbl3DI"},"source":["## Facial expression detection"]},{"cell_type":"code","metadata":{"id":"NudXLk6-Iy_H","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":151},"executionInfo":{"status":"ok","timestamp":1596444147951,"user_tz":-480,"elapsed":3889,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"e86a0f53-bdd4-4987-c7e5-0cdd8a8ee31d"},"source":["uri_base = 'gs://cloud-vision-codelab'\n","pics = ('face_surprise.jpg', 'face_no_surprise.png')\n","\n","client = vision.ImageAnnotatorClient()\n","image = vision.types.Image()\n","\n","for pic in pics:\n","  image.source.image_uri = '%s/%s' % (uri_base, pic)\n","  response = client.face_detection(image=image)\n","\n","  print('=' * 30)\n","  print('File:', pic)\n","  for face in response.face_annotations:\n","    likelihood = vision.enums.Likelihood(face.surprise_likelihood)\n","    vertices = ['(%s,%s)' % (v.x, v.y) for v in face.bounding_poly.vertices]\n","    print('Face surprised:', likelihood.name)\n","    print('Face bounds:', \",\".join(vertices))"],"execution_count":57,"outputs":[{"output_type":"stream","text":["==============================\n","File: face_surprise.jpg\n","Face surprised: LIKELY\n","Face bounds: (93,425),(520,425),(520,922),(93,922)\n","==============================\n","File: face_no_surprise.png\n","Face surprised: VERY_UNLIKELY\n","Face bounds: (120,0),(334,0),(334,198),(120,198)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ttZZhIWNfHFm","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1596444498594,"user_tz":-480,"elapsed":1680,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"3dc3acb6-f723-4122-c6b2-61d374f99e13"},"source":["print(response)"],"execution_count":58,"outputs":[{"output_type":"stream","text":["face_annotations {\n","  bounding_poly {\n","    vertices {\n","      x: 120\n","    }\n","    vertices {\n","      x: 334\n","    }\n","    vertices {\n","      x: 334\n","      y: 198\n","    }\n","    vertices {\n","      x: 120\n","      y: 198\n","    }\n","  }\n","  fd_bounding_poly {\n","    vertices {\n","      x: 142\n","      y: 1\n","    }\n","    vertices {\n","      x: 305\n","      y: 1\n","    }\n","    vertices {\n","      x: 305\n","      y: 180\n","    }\n","    vertices {\n","      x: 142\n","      y: 180\n","    }\n","  }\n","  landmarks {\n","    type: LEFT_EYE\n","    position {\n","      x: 190.33827209472656\n","      y: 81.78099822998047\n","      z: -0.00016880035400390625\n","    }\n","  }\n","  landmarks {\n","    type: RIGHT_EYE\n","    position {\n","      x: 255.1383819580078\n","      y: 75.99293518066406\n","      z: -4.669169902801514\n","    }\n","  }\n","  landmarks {\n","    type: LEFT_OF_LEFT_EYEBROW\n","    position {\n","      x: 165.85482788085938\n","      y: 65.39080047607422\n","      z: 4.599323272705078\n","    }\n","  }\n","  landmarks {\n","    type: RIGHT_OF_LEFT_EYEBROW\n","    position {\n","      x: 204.471923828125\n","      y: 69.32319641113281\n","      z: -15.914590835571289\n","    }\n","  }\n","  landmarks {\n","    type: LEFT_OF_RIGHT_EYEBROW\n","    position {\n","      x: 236.92079162597656\n","      y: 62.446022033691406\n","      z: -18.454334259033203\n","    }\n","  }\n","  landmarks {\n","    type: RIGHT_OF_RIGHT_EYEBROW\n","    position {\n","      x: 274.6064147949219\n","      y: 50.917179107666016\n","      z: -3.264523983001709\n","    }\n","  }\n","  landmarks {\n","    type: MIDPOINT_BETWEEN_EYES\n","    position {\n","      x: 220.8768310546875\n","      y: 81.40436553955078\n","      z: -15.528277397155762\n","    }\n","  }\n","  landmarks {\n","    type: NOSE_TIP\n","    position {\n","      x: 222.6112518310547\n","      y: 121.4370346069336\n","      z: -27.375526428222656\n","    }\n","  }\n","  landmarks {\n","    type: UPPER_LIP\n","    position {\n","      x: 228.37684631347656\n","      y: 142.8179168701172\n","      z: -8.835281372070312\n","    }\n","  }\n","  landmarks {\n","    type: LOWER_LIP\n","    position {\n","      x: 231.44142150878906\n","      y: 160.53945922851562\n","      z: -0.9902482032775879\n","    }\n","  }\n","  landmarks {\n","    type: MOUTH_LEFT\n","    position {\n","      x: 204.17196655273438\n","      y: 149.52488708496094\n","      z: 11.296287536621094\n","    }\n","  }\n","  landmarks {\n","    type: MOUTH_RIGHT\n","    position {\n","      x: 256.84991455078125\n","      y: 142.23329162597656\n","      z: 7.448793411254883\n","    }\n","  }\n","  landmarks {\n","    type: MOUTH_CENTER\n","    position {\n","      x: 230.4845428466797\n","      y: 150.01593017578125\n","      z: -2.636214256286621\n","    }\n","  }\n","  landmarks {\n","    type: NOSE_BOTTOM_RIGHT\n","    position {\n","      x: 242.87301635742188\n","      y: 121.64866638183594\n","      z: -4.237617492675781\n","    }\n","  }\n","  landmarks {\n","    type: NOSE_BOTTOM_LEFT\n","    position {\n","      x: 209.08856201171875\n","      y: 126.76960754394531\n","      z: -1.7939510345458984\n","    }\n","  }\n","  landmarks {\n","    type: NOSE_BOTTOM_CENTER\n","    position {\n","      x: 226.72384643554688\n","      y: 130.25852966308594\n","      z: -11.405028343200684\n","    }\n","  }\n","  landmarks {\n","    type: LEFT_EYE_TOP_BOUNDARY\n","    position {\n","      x: 188.33480834960938\n","      y: 75.27998352050781\n","      z: -4.669627666473389\n","    }\n","  }\n","  landmarks {\n","    type: LEFT_EYE_RIGHT_CORNER\n","    position {\n","      x: 202.99908447265625\n","      y: 82.3132553100586\n","      z: -0.7470932006835938\n","    }\n","  }\n","  landmarks {\n","    type: LEFT_EYE_BOTTOM_BOUNDARY\n","    position {\n","      x: 189.96746826171875\n","      y: 87.24530792236328\n","      z: 0.2772665023803711\n","    }\n","  }\n","  landmarks {\n","    type: LEFT_EYE_LEFT_CORNER\n","    position {\n","      x: 177.0529327392578\n","      y: 81.97349548339844\n","      z: 6.7751569747924805\n","    }\n","  }\n","  landmarks {\n","    type: RIGHT_EYE_TOP_BOUNDARY\n","    position {\n","      x: 254.88450622558594\n","      y: 69.19598388671875\n","      z: -9.450294494628906\n","    }\n","  }\n","  landmarks {\n","    type: RIGHT_EYE_RIGHT_CORNER\n","    position {\n","      x: 268.8637390136719\n","      y: 74.63604736328125\n","      z: 0.14888238906860352\n","    }\n","  }\n","  landmarks {\n","    type: RIGHT_EYE_BOTTOM_BOUNDARY\n","    position {\n","      x: 256.4136657714844\n","      y: 81.77474975585938\n","      z: -4.455702304840088\n","    }\n","  }\n","  landmarks {\n","    type: RIGHT_EYE_LEFT_CORNER\n","    position {\n","      x: 242.19007873535156\n","      y: 79.46281433105469\n","      z: -3.4963955879211426\n","    }\n","  }\n","  landmarks {\n","    type: LEFT_EYEBROW_UPPER_MIDPOINT\n","    position {\n","      x: 183.5481719970703\n","      y: 62.47791290283203\n","      z: -10.742033958435059\n","    }\n","  }\n","  landmarks {\n","    type: RIGHT_EYEBROW_UPPER_MIDPOINT\n","    position {\n","      x: 255.54605102539062\n","      y: 50.7327766418457\n","      z: -16.097854614257812\n","    }\n","  }\n","  landmarks {\n","    type: LEFT_EAR_TRAGION\n","    position {\n","      x: 162.2941436767578\n","      y: 100.2071304321289\n","      z: 85.8434829711914\n","    }\n","  }\n","  landmarks {\n","    type: RIGHT_EAR_TRAGION\n","    position {\n","      x: 293.4668273925781\n","      y: 76.98344421386719\n","      z: 75.6653060913086\n","    }\n","  }\n","  landmarks {\n","    type: FOREHEAD_GLABELLA\n","    position {\n","      x: 219.09786987304688\n","      y: 66.00100708007812\n","      z: -19.4405574798584\n","    }\n","  }\n","  landmarks {\n","    type: CHIN_GNATHION\n","    position {\n","      x: 236.7681884765625\n","      y: 191.2475128173828\n","      z: 13.696146011352539\n","    }\n","  }\n","  landmarks {\n","    type: CHIN_LEFT_GONION\n","    position {\n","      x: 180.2234344482422\n","      y: 147.8806915283203\n","      z: 68.9618148803711\n","    }\n","  }\n","  landmarks {\n","    type: CHIN_RIGHT_GONION\n","    position {\n","      x: 285.17095947265625\n","      y: 138.69888305664062\n","      z: 60.24407196044922\n","    }\n","  }\n","  landmarks {\n","    position {\n","      x: 183.68856811523438\n","      y: 122.8792724609375\n","      z: 14.229454040527344\n","    }\n","  }\n","  landmarks {\n","    position {\n","      x: 272.9405212402344\n","      y: 114.82191467285156\n","      z: 7.774192810058594\n","    }\n","  }\n","  roll_angle: -6.991962432861328\n","  pan_angle: -4.1719207763671875\n","  tilt_angle: -10.890296936035156\n","  detection_confidence: 0.8394913673400879\n","  landmarking_confidence: 0.47497668862342834\n","  joy_likelihood: VERY_UNLIKELY\n","  sorrow_likelihood: VERY_UNLIKELY\n","  anger_likelihood: VERY_UNLIKELY\n","  surprise_likelihood: VERY_UNLIKELY\n","  under_exposed_likelihood: VERY_UNLIKELY\n","  blurred_likelihood: VERY_UNLIKELY\n","  headwear_likelihood: VERY_UNLIKELY\n","}\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yw04813ogdPZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1596444818839,"user_tz":-480,"elapsed":1143,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"257a6480-24fa-409d-ea27-838093c3d7b8"},"source":["# response.face_annotations.surprise_likelihood\n","for face in response.face_annotations:\n","  print(face.surprise_likelihood)\n","  likelihood = vision.enums.Likelihood(face.surprise_likelihood)\n","  print(likelihood)\n","  print(likelihood.name)"],"execution_count":67,"outputs":[{"output_type":"stream","text":["1\n","Likelihood.VERY_UNLIKELY\n","VERY_UNLIKELY\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NP3iK82Lg0xS","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":907},"executionInfo":{"status":"ok","timestamp":1596444832378,"user_tz":-480,"elapsed":534,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"2ffd181d-60e9-4a0f-c4c5-71bbcb536775"},"source":["help(likelihood)"],"execution_count":68,"outputs":[{"output_type":"stream","text":["Help on Likelihood in module google.cloud.vision_v1.gapic.enums object:\n","\n","class Likelihood(enum.IntEnum)\n"," |  A bucketized representation of likelihood, which is intended to give clients\n"," |  highly stable results across model upgrades.\n"," |  \n"," |  Attributes:\n"," |    UNKNOWN (int): Unknown likelihood.\n"," |    VERY_UNLIKELY (int): It is very unlikely.\n"," |    UNLIKELY (int): It is unlikely.\n"," |    POSSIBLE (int): It is possible.\n"," |    LIKELY (int): It is likely.\n"," |    VERY_LIKELY (int): It is very likely.\n"," |  \n"," |  Method resolution order:\n"," |      Likelihood\n"," |      enum.IntEnum\n"," |      builtins.int\n"," |      enum.Enum\n"," |      builtins.object\n"," |  \n"," |  Data and other attributes defined here:\n"," |  \n"," |  LIKELY = <Likelihood.LIKELY: 4>\n"," |  \n"," |  POSSIBLE = <Likelihood.POSSIBLE: 3>\n"," |  \n"," |  UNKNOWN = <Likelihood.UNKNOWN: 0>\n"," |  \n"," |  UNLIKELY = <Likelihood.UNLIKELY: 2>\n"," |  \n"," |  VERY_LIKELY = <Likelihood.VERY_LIKELY: 5>\n"," |  \n"," |  VERY_UNLIKELY = <Likelihood.VERY_UNLIKELY: 1>\n"," |  \n"," |  ----------------------------------------------------------------------\n"," |  Data descriptors inherited from enum.Enum:\n"," |  \n"," |  name\n"," |      The name of the Enum member.\n"," |  \n"," |  value\n"," |      The value of the Enum member.\n"," |  \n"," |  ----------------------------------------------------------------------\n"," |  Data descriptors inherited from enum.EnumMeta:\n"," |  \n"," |  __members__\n"," |      Returns a mapping of member name->value.\n"," |      \n"," |      This mapping lists all enum members, including aliases. Note that this\n"," |      is a read-only view of the internal mapping.\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"Ocn5plyJmDiL"},"source":["## Text and label detection of pics on google cloud storage"]},{"cell_type":"code","metadata":{"id":"tnNdTfPrhu64","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596449589008,"user_tz":-480,"elapsed":4413,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["image_uri = 'gs://cloud_vision_api_use_1/shanghai.jpeg'\n","# image_uri = '/content/shanghai.jpeg'\n","client = vision.ImageAnnotatorClient()\n","image = vision.types.Image()\n","image.source.image_uri = image_uri\n","\n","response_text = client.text_detection(image=image)\n","response_label = client.label_detection(image=image)"],"execution_count":88,"outputs":[]},{"cell_type":"code","metadata":{"id":"LEHOb_8MqKJT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":218},"executionInfo":{"status":"ok","timestamp":1596449589009,"user_tz":-480,"elapsed":4048,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"ebbf2e37-1282-4a28-c821-5931167303f5"},"source":["print('Labels (and confidence score):')\n","print('=' * 30)\n","for label in response_label.label_annotations:\n","    print(label.description, '(%.2f%%)' % (label.score*100.))"],"execution_count":89,"outputs":[{"output_type":"stream","text":["Labels (and confidence score):\n","==============================\n","People (95.05%)\n","Street (89.12%)\n","Mode of transport (89.09%)\n","Transport (85.13%)\n","Vehicle (84.69%)\n","Snapshot (84.11%)\n","Urban area (80.29%)\n","Infrastructure (73.14%)\n","Road (72.74%)\n","Pedestrian (68.90%)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LaOGOpA9qQ8Q","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596448343291,"user_tz":-480,"elapsed":629,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["def extract_text(response_text,delete_full_text=True):\n","  text_info = {}\n","  text_num = 1\n","  for text in response_text.text_annotations:\n","    if text_num == 1 and delete_full_text == True:\n","      text_num += 1\n","      continue\n","    # print(text.description)\n","    vertices = [(vertice.x,vertice.y) for vertice in text.bounding_poly.vertices]\n","    # print(vertices)\n","    text_info[text.description]=vertices\n","  return text_info"],"execution_count":83,"outputs":[]},{"cell_type":"code","metadata":{"id":"HknNzbH9tWqF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596449194180,"user_tz":-480,"elapsed":1408,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"216f907b-d8eb-402b-af4d-ee962667d561"},"source":["text_info = extract_text(response_text)\n","text_info"],"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{}"]},"metadata":{"tags":[]},"execution_count":87}]},{"cell_type":"code","metadata":{"id":"RMqd1E1dqTXD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1596447176612,"user_tz":-480,"elapsed":1476,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"5d50d794-2cb0-43be-8288-9bdb78846d37"},"source":["print(response_text)"],"execution_count":74,"outputs":[{"output_type":"stream","text":["text_annotations {\n","  locale: \"pt-PT\"\n","  description: \"\\347\\211\\233\\347\\211\\233\\351\\235\\242\\351\\246\\206\\n-019\\n10 TB\\nAPY\\n\"\n","  bounding_poly {\n","    vertices {\n","      x: 89\n","      y: 189\n","    }\n","    vertices {\n","      x: 2325\n","      y: 189\n","    }\n","    vertices {\n","      x: 2325\n","      y: 1059\n","    }\n","    vertices {\n","      x: 89\n","      y: 1059\n","    }\n","  }\n","}\n","text_annotations {\n","  description: \"\\347\\211\\233\\347\\211\\233\"\n","  bounding_poly {\n","    vertices {\n","      x: 89\n","      y: 192\n","    }\n","    vertices {\n","      x: 607\n","      y: 190\n","    }\n","    vertices {\n","      x: 608\n","      y: 361\n","    }\n","    vertices {\n","      x: 90\n","      y: 363\n","    }\n","  }\n","}\n","text_annotations {\n","  description: \"\\351\\235\\242\"\n","  bounding_poly {\n","    vertices {\n","      x: 610\n","      y: 190\n","    }\n","    vertices {\n","      x: 808\n","      y: 189\n","    }\n","    vertices {\n","      x: 809\n","      y: 360\n","    }\n","    vertices {\n","      x: 611\n","      y: 361\n","    }\n","  }\n","}\n","text_annotations {\n","  description: \"\\351\\246\\206\"\n","  bounding_poly {\n","    vertices {\n","      x: 809\n","      y: 189\n","    }\n","    vertices {\n","      x: 919\n","      y: 189\n","    }\n","    vertices {\n","      x: 920\n","      y: 360\n","    }\n","    vertices {\n","      x: 810\n","      y: 360\n","    }\n","  }\n","}\n","text_annotations {\n","  description: \"-019\"\n","  bounding_poly {\n","    vertices {\n","      x: 352\n","      y: 709\n","    }\n","    vertices {\n","      x: 385\n","      y: 697\n","    }\n","    vertices {\n","      x: 388\n","      y: 705\n","    }\n","    vertices {\n","      x: 355\n","      y: 717\n","    }\n","  }\n","}\n","text_annotations {\n","  description: \"10\"\n","  bounding_poly {\n","    vertices {\n","      x: 1284\n","      y: 1023\n","    }\n","    vertices {\n","      x: 1323\n","      y: 1028\n","    }\n","    vertices {\n","      x: 1319\n","      y: 1057\n","    }\n","    vertices {\n","      x: 1280\n","      y: 1052\n","    }\n","  }\n","}\n","text_annotations {\n","  description: \"TB\"\n","  bounding_poly {\n","    vertices {\n","      x: 1317\n","      y: 1031\n","    }\n","    vertices {\n","      x: 1360\n","      y: 1037\n","    }\n","    vertices {\n","      x: 1357\n","      y: 1059\n","    }\n","    vertices {\n","      x: 1314\n","      y: 1054\n","    }\n","  }\n","}\n","text_annotations {\n","  description: \"APY\"\n","  bounding_poly {\n","    vertices {\n","      x: 2298\n","      y: 936\n","    }\n","    vertices {\n","      x: 2321\n","      y: 931\n","    }\n","    vertices {\n","      x: 2324\n","      y: 945\n","    }\n","    vertices {\n","      x: 2301\n","      y: 950\n","    }\n","  }\n","}\n","full_text_annotation {\n","  pages {\n","    property {\n","      detected_languages {\n","        language_code: \"pt\"\n","        confidence: 0.27000001072883606\n","      }\n","    }\n","    width: 2549\n","    height: 1703\n","    blocks {\n","      bounding_box {\n","        vertices {\n","          x: 89\n","          y: 192\n","        }\n","        vertices {\n","          x: 919\n","          y: 189\n","        }\n","        vertices {\n","          x: 920\n","          y: 360\n","        }\n","        vertices {\n","          x: 90\n","          y: 363\n","        }\n","      }\n","      paragraphs {\n","        bounding_box {\n","          vertices {\n","            x: 89\n","            y: 192\n","          }\n","          vertices {\n","            x: 919\n","            y: 189\n","          }\n","          vertices {\n","            x: 920\n","            y: 360\n","          }\n","          vertices {\n","            x: 90\n","            y: 363\n","          }\n","        }\n","        words {\n","          bounding_box {\n","            vertices {\n","              x: 89\n","              y: 192\n","            }\n","            vertices {\n","              x: 607\n","              y: 190\n","            }\n","            vertices {\n","              x: 608\n","              y: 361\n","            }\n","            vertices {\n","              x: 90\n","              y: 363\n","            }\n","          }\n","          symbols {\n","            bounding_box {\n","              vertices {\n","                x: 89\n","                y: 192\n","              }\n","              vertices {\n","                x: 375\n","                y: 191\n","              }\n","              vertices {\n","                x: 376\n","                y: 362\n","              }\n","              vertices {\n","                x: 90\n","                y: 363\n","              }\n","            }\n","            text: \"\\347\\211\\233\"\n","          }\n","          symbols {\n","            bounding_box {\n","              vertices {\n","                x: 376\n","                y: 191\n","              }\n","              vertices {\n","                x: 607\n","                y: 190\n","              }\n","              vertices {\n","                x: 608\n","                y: 361\n","              }\n","              vertices {\n","                x: 377\n","                y: 362\n","              }\n","            }\n","            text: \"\\347\\211\\233\"\n","          }\n","        }\n","        words {\n","          bounding_box {\n","            vertices {\n","              x: 610\n","              y: 190\n","            }\n","            vertices {\n","              x: 808\n","              y: 189\n","            }\n","            vertices {\n","              x: 809\n","              y: 360\n","            }\n","            vertices {\n","              x: 611\n","              y: 361\n","            }\n","          }\n","          symbols {\n","            bounding_box {\n","              vertices {\n","                x: 610\n","                y: 190\n","              }\n","              vertices {\n","                x: 808\n","                y: 189\n","              }\n","              vertices {\n","                x: 809\n","                y: 360\n","              }\n","              vertices {\n","                x: 611\n","                y: 361\n","              }\n","            }\n","            text: \"\\351\\235\\242\"\n","          }\n","        }\n","        words {\n","          bounding_box {\n","            vertices {\n","              x: 809\n","              y: 189\n","            }\n","            vertices {\n","              x: 919\n","              y: 189\n","            }\n","            vertices {\n","              x: 920\n","              y: 360\n","            }\n","            vertices {\n","              x: 810\n","              y: 360\n","            }\n","          }\n","          symbols {\n","            property {\n","              detected_break {\n","                type: LINE_BREAK\n","              }\n","            }\n","            bounding_box {\n","              vertices {\n","                x: 809\n","                y: 189\n","              }\n","              vertices {\n","                x: 919\n","                y: 189\n","              }\n","              vertices {\n","                x: 920\n","                y: 360\n","              }\n","              vertices {\n","                x: 810\n","                y: 360\n","              }\n","            }\n","            text: \"\\351\\246\\206\"\n","          }\n","        }\n","      }\n","      block_type: TEXT\n","    }\n","    blocks {\n","      bounding_box {\n","        vertices {\n","          x: 352\n","          y: 709\n","        }\n","        vertices {\n","          x: 385\n","          y: 697\n","        }\n","        vertices {\n","          x: 388\n","          y: 705\n","        }\n","        vertices {\n","          x: 355\n","          y: 717\n","        }\n","      }\n","      paragraphs {\n","        bounding_box {\n","          vertices {\n","            x: 352\n","            y: 709\n","          }\n","          vertices {\n","            x: 385\n","            y: 697\n","          }\n","          vertices {\n","            x: 388\n","            y: 705\n","          }\n","          vertices {\n","            x: 355\n","            y: 717\n","          }\n","        }\n","        words {\n","          bounding_box {\n","            vertices {\n","              x: 352\n","              y: 709\n","            }\n","            vertices {\n","              x: 385\n","              y: 697\n","            }\n","            vertices {\n","              x: 388\n","              y: 705\n","            }\n","            vertices {\n","              x: 355\n","              y: 717\n","            }\n","          }\n","          symbols {\n","            bounding_box {\n","              vertices {\n","                x: 352\n","                y: 709\n","              }\n","              vertices {\n","                x: 364\n","                y: 705\n","              }\n","              vertices {\n","                x: 367\n","                y: 712\n","              }\n","              vertices {\n","                x: 355\n","                y: 717\n","              }\n","            }\n","            text: \"-\"\n","          }\n","          symbols {\n","            bounding_box {\n","              vertices {\n","                x: 366\n","                y: 704\n","              }\n","              vertices {\n","                x: 372\n","                y: 702\n","              }\n","              vertices {\n","                x: 374\n","                y: 708\n","              }\n","              vertices {\n","                x: 368\n","                y: 710\n","              }\n","            }\n","            text: \"0\"\n","          }\n","          symbols {\n","            bounding_box {\n","              vertices {\n","                x: 375\n","                y: 701\n","              }\n","              vertices {\n","                x: 377\n","                y: 700\n","              }\n","              vertices {\n","                x: 379\n","                y: 706\n","              }\n","              vertices {\n","                x: 377\n","                y: 707\n","              }\n","            }\n","            text: \"1\"\n","          }\n","          symbols {\n","            property {\n","              detected_break {\n","                type: LINE_BREAK\n","              }\n","            }\n","            bounding_box {\n","              vertices {\n","                x: 381\n","                y: 700\n","              }\n","              vertices {\n","                x: 386\n","                y: 698\n","              }\n","              vertices {\n","                x: 388\n","                y: 704\n","              }\n","              vertices {\n","                x: 383\n","                y: 706\n","              }\n","            }\n","            text: \"9\"\n","          }\n","        }\n","      }\n","      block_type: TEXT\n","    }\n","    blocks {\n","      property {\n","        detected_languages {\n","          language_code: \"pt\"\n","          confidence: 1.0\n","        }\n","      }\n","      bounding_box {\n","        vertices {\n","          x: 1284\n","          y: 1023\n","        }\n","        vertices {\n","          x: 1360\n","          y: 1033\n","        }\n","        vertices {\n","          x: 1357\n","          y: 1062\n","        }\n","        vertices {\n","          x: 1280\n","          y: 1052\n","        }\n","      }\n","      paragraphs {\n","        property {\n","          detected_languages {\n","            language_code: \"pt\"\n","            confidence: 1.0\n","          }\n","        }\n","        bounding_box {\n","          vertices {\n","            x: 1284\n","            y: 1023\n","          }\n","          vertices {\n","            x: 1360\n","            y: 1033\n","          }\n","          vertices {\n","            x: 1357\n","            y: 1062\n","          }\n","          vertices {\n","            x: 1280\n","            y: 1052\n","          }\n","        }\n","        words {\n","          property {\n","            detected_languages {\n","              language_code: \"pt\"\n","            }\n","          }\n","          bounding_box {\n","            vertices {\n","              x: 1284\n","              y: 1023\n","            }\n","            vertices {\n","              x: 1323\n","              y: 1028\n","            }\n","            vertices {\n","              x: 1319\n","              y: 1057\n","            }\n","            vertices {\n","              x: 1280\n","              y: 1052\n","            }\n","          }\n","          symbols {\n","            property {\n","              detected_languages {\n","                language_code: \"pt\"\n","              }\n","            }\n","            bounding_box {\n","              vertices {\n","                x: 1284\n","                y: 1023\n","              }\n","              vertices {\n","                x: 1313\n","                y: 1027\n","              }\n","              vertices {\n","                x: 1309\n","                y: 1055\n","              }\n","              vertices {\n","                x: 1280\n","                y: 1052\n","              }\n","            }\n","            text: \"1\"\n","          }\n","          symbols {\n","            property {\n","              detected_languages {\n","                language_code: \"pt\"\n","              }\n","              detected_break {\n","                type: SPACE\n","              }\n","            }\n","            bounding_box {\n","              vertices {\n","                x: 1314\n","                y: 1027\n","              }\n","              vertices {\n","                x: 1323\n","                y: 1028\n","              }\n","              vertices {\n","                x: 1319\n","                y: 1057\n","              }\n","              vertices {\n","                x: 1310\n","                y: 1056\n","              }\n","            }\n","            text: \"0\"\n","          }\n","        }\n","        words {\n","          property {\n","            detected_languages {\n","              language_code: \"pt\"\n","            }\n","          }\n","          bounding_box {\n","            vertices {\n","              x: 1317\n","              y: 1031\n","            }\n","            vertices {\n","              x: 1360\n","              y: 1037\n","            }\n","            vertices {\n","              x: 1357\n","              y: 1059\n","            }\n","            vertices {\n","              x: 1314\n","              y: 1054\n","            }\n","          }\n","          symbols {\n","            property {\n","              detected_languages {\n","                language_code: \"pt\"\n","              }\n","            }\n","            bounding_box {\n","              vertices {\n","                x: 1317\n","                y: 1033\n","              }\n","              vertices {\n","                x: 1333\n","                y: 1035\n","              }\n","              vertices {\n","                x: 1330\n","                y: 1056\n","              }\n","              vertices {\n","                x: 1314\n","                y: 1054\n","              }\n","            }\n","            text: \"T\"\n","          }\n","          symbols {\n","            property {\n","              detected_languages {\n","                language_code: \"pt\"\n","              }\n","              detected_break {\n","                type: LINE_BREAK\n","              }\n","            }\n","            bounding_box {\n","              vertices {\n","                x: 1340\n","                y: 1034\n","              }\n","              vertices {\n","                x: 1360\n","                y: 1037\n","              }\n","              vertices {\n","                x: 1357\n","                y: 1057\n","              }\n","              vertices {\n","                x: 1337\n","                y: 1055\n","              }\n","            }\n","            text: \"B\"\n","          }\n","        }\n","      }\n","      block_type: TEXT\n","    }\n","    blocks {\n","      bounding_box {\n","        vertices {\n","          x: 2298\n","          y: 936\n","        }\n","        vertices {\n","          x: 2321\n","          y: 931\n","        }\n","        vertices {\n","          x: 2324\n","          y: 945\n","        }\n","        vertices {\n","          x: 2301\n","          y: 950\n","        }\n","      }\n","      paragraphs {\n","        bounding_box {\n","          vertices {\n","            x: 2298\n","            y: 936\n","          }\n","          vertices {\n","            x: 2321\n","            y: 931\n","          }\n","          vertices {\n","            x: 2324\n","            y: 945\n","          }\n","          vertices {\n","            x: 2301\n","            y: 950\n","          }\n","        }\n","        words {\n","          bounding_box {\n","            vertices {\n","              x: 2298\n","              y: 936\n","            }\n","            vertices {\n","              x: 2321\n","              y: 931\n","            }\n","            vertices {\n","              x: 2324\n","              y: 945\n","            }\n","            vertices {\n","              x: 2301\n","              y: 950\n","            }\n","          }\n","          symbols {\n","            bounding_box {\n","              vertices {\n","                x: 2298\n","                y: 936\n","              }\n","              vertices {\n","                x: 2304\n","                y: 935\n","              }\n","              vertices {\n","                x: 2306\n","                y: 945\n","              }\n","              vertices {\n","                x: 2300\n","                y: 946\n","              }\n","            }\n","            text: \"A\"\n","          }\n","          symbols {\n","            bounding_box {\n","              vertices {\n","                x: 2307\n","                y: 934\n","              }\n","              vertices {\n","                x: 2318\n","                y: 932\n","              }\n","              vertices {\n","                x: 2321\n","                y: 945\n","              }\n","              vertices {\n","                x: 2310\n","                y: 948\n","              }\n","            }\n","            text: \"P\"\n","          }\n","          symbols {\n","            property {\n","              detected_break {\n","                type: LINE_BREAK\n","              }\n","            }\n","            bounding_box {\n","              vertices {\n","                x: 2320\n","                y: 936\n","              }\n","              vertices {\n","                x: 2322\n","                y: 936\n","              }\n","              vertices {\n","                x: 2323\n","                y: 940\n","              }\n","              vertices {\n","                x: 2321\n","                y: 941\n","              }\n","            }\n","            text: \"Y\"\n","          }\n","        }\n","      }\n","      block_type: TEXT\n","    }\n","  }\n","  text: \"\\347\\211\\233\\347\\211\\233\\351\\235\\242\\351\\246\\206\\n-019\\n10 TB\\nAPY\\n\"\n","}\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"JoCBK7xZ0EB2"},"source":["## Text detection of pics on local file system"]},{"cell_type":"code","metadata":{"id":"dPJuuYMkqrGq","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596511568199,"user_tz":-480,"elapsed":1573,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["def detect_text(path):\n","  \"\"\"Detects text in the file.\"\"\"\n","  client = vision.ImageAnnotatorClient()\n","\n","  with io.open(path, 'rb') as image_file:   #字节流的形式读入图片\n","    content = image_file.read()  \n","\n","  image = vision.types.Image(content=content)\n","  print('Image byte size: ',image.ByteSize)\n","\n","  response = client.text_detection(image=image)\n","  texts = response.text_annotations\n","  print('Texts:')\n","\n","  for text in texts:\n","    print('\\n\"{}\"'.format(text.description))\n","\n","    vertices = (['({},{})'.format(vertex.x, vertex.y)\n","                for vertex in text.bounding_poly.vertices])\n","\n","    print('bounds: {}'.format(','.join(vertices)))"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"kf-cd-fx0Q0s","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":504},"executionInfo":{"status":"ok","timestamp":1596449723496,"user_tz":-480,"elapsed":4162,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"2905d3b7-0ada-43f2-91fa-2d36dbc60792"},"source":["detect_text('/content/shanghai.jpeg')"],"execution_count":93,"outputs":[{"output_type":"stream","text":["Texts:\n","\n","\"牛牛面馆\n","-019\n","10 TB\n","APY\n","\"\n","bounds: (89,189),(2325,189),(2325,1059),(89,1059)\n","\n","\"牛牛\"\n","bounds: (89,192),(607,190),(608,361),(90,363)\n","\n","\"面\"\n","bounds: (610,190),(808,189),(809,360),(611,361)\n","\n","\"馆\"\n","bounds: (809,189),(919,189),(920,360),(810,360)\n","\n","\"-019\"\n","bounds: (352,709),(385,697),(388,705),(355,717)\n","\n","\"10\"\n","bounds: (1284,1023),(1323,1028),(1319,1057),(1280,1052)\n","\n","\"TB\"\n","bounds: (1317,1031),(1360,1037),(1357,1059),(1314,1054)\n","\n","\"APY\"\n","bounds: (2298,936),(2321,931),(2324,945),(2301,950)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"xvWZbuhI0XKD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":353},"executionInfo":{"status":"ok","timestamp":1596452600582,"user_tz":-480,"elapsed":516,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"6db64f43-0db6-478d-acac-35f7520269b5"},"source":["with io.open('/content/shanghai.jpeg', 'rb') as image_file:\n","  content = image_file.read()\n","  help(image_file.read)"],"execution_count":96,"outputs":[{"output_type":"stream","text":["Help on built-in function read:\n","\n","read(size=-1, /) method of _io.BufferedReader instance\n","    Read and return up to n bytes.\n","    \n","    If the argument is omitted, None, or negative, reads and\n","    returns all data until EOF.\n","    \n","    If the argument is positive, and the underlying raw stream is\n","    not 'interactive', multiple raw reads may be issued to satisfy\n","    the byte count (unless EOF is reached first).  But for\n","    interactive raw streams (as well as sockets and pipes), at most\n","    one raw read will be issued, and a short result does not imply\n","    that EOF is imminent.\n","    \n","    Returns an empty bytes object on EOF.\n","    \n","    Returns None if the underlying raw stream was open in non-blocking\n","    mode and no data is available at the moment.\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2n_VBOLy_IQy","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":437},"executionInfo":{"status":"ok","timestamp":1596454712009,"user_tz":-480,"elapsed":1096,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"f9dc2919-5999-4f09-ee1d-ed02751fbdde"},"source":["help(vision.types.Image.source)"],"execution_count":98,"outputs":[{"output_type":"stream","text":["Help on FieldProperty object:\n","\n","class FieldProperty(builtins.object)\n"," |  Field property of a Message\n"," |  \n"," |  Methods defined here:\n"," |  \n"," |  __delete__(self, instance, /)\n"," |      Delete an attribute of instance.\n"," |  \n"," |  __get__(self, instance, owner, /)\n"," |      Return an attribute of instance, which is of type owner.\n"," |  \n"," |  __repr__(self, /)\n"," |      Return repr(self).\n"," |  \n"," |  __set__(self, instance, value, /)\n"," |      Set an attribute of instance to value.\n"," |  \n"," |  ----------------------------------------------------------------------\n"," |  Data descriptors defined here:\n"," |  \n"," |  DESCRIPTOR\n"," |      Field descriptor\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"pbCmpSoSJCia","colab_type":"text"},"source":["## Synthetic application with Flickr and Google APIs!!!"]},{"cell_type":"code","metadata":{"id":"uuaWQ5_eGSnd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":289},"executionInfo":{"status":"ok","timestamp":1596511590197,"user_tz":-480,"elapsed":9252,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"b3f5f479-597b-45c5-d256-9d103c926a06"},"source":["!pip install flickrapi"],"execution_count":11,"outputs":[{"output_type":"stream","text":["Collecting flickrapi\n","  Downloading flickrapi-2.4.0-py2.py3-none-any.whl (26 kB)\n","Collecting requests-toolbelt>=0.3.1\n","  Downloading requests_toolbelt-0.9.1-py2.py3-none-any.whl (54 kB)\n","\u001b[K     |████████████████████████████████| 54 kB 1.6 MB/s \n","\u001b[?25hRequirement already satisfied: requests-oauthlib>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from flickrapi) (1.3.0)\n","Requirement already satisfied: requests>=2.2.1 in /usr/local/lib/python3.6/dist-packages (from flickrapi) (2.23.0)\n","Requirement already satisfied: six>=1.5.2 in /usr/local/lib/python3.6/dist-packages (from flickrapi) (1.15.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.4.0->flickrapi) (3.1.0)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests>=2.2.1->flickrapi) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests>=2.2.1->flickrapi) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests>=2.2.1->flickrapi) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests>=2.2.1->flickrapi) (2020.6.20)\n","Installing collected packages: requests-toolbelt, flickrapi\n","Successfully installed flickrapi-2.4.0 requests-toolbelt-0.9.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EBLZIvJCZgfG","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596511593360,"user_tz":-480,"elapsed":10705,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["!mkdir 'flickr_pics'"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"n4IFvAuajcXf","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596516567316,"user_tz":-480,"elapsed":1461,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["from flickrapi import FlickrAPI\n","import urllib \n","import os\n","import matplotlib.pyplot as plt\n","from PIL import Image\n","import numpy as np"],"execution_count":65,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"lkOZQ7LbqUDt","colab_type":"text"},"source":["### Download pictures by using flickr api"]},{"cell_type":"code","metadata":{"id":"CK4uyKHwjMvs","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596511933937,"user_tz":-480,"elapsed":2483,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["def get_photos_from_flickr(FLICKR_PUBLIC,FLICKR_SECRET,tags):\n","  flickr = FlickrAPI(FLICKR_PUBLIC, FLICKR_SECRET, format='parsed-json')\n","  extras = 'url_z'\n","  for tag in tags:\n","    all_photos = flickr.photos.search(tags=[tag], tag_mode='any', per_page=3, extras=extras, page=1)\n","\n","    count = 0\n","    for photo in all_photos['photos']['photo']:\n","      count += 1\n","      print('Downloading: ',photo['url_z'],'...')\n","      try:\n","        urllib.request.urlretrieve(photo['url_z'], 'flickr_pics' + '/' + tag + '_' + str(count) + \".jpeg\")\n","      except Exception as e:\n","        print('Not available: ',photo['url_z'])\n","\n","  print('Done!!!')"],"execution_count":19,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"KeJHzrruq3XE","colab_type":"text"},"source":["#### Key and secret of Flickr API"]},{"cell_type":"code","metadata":{"id":"gExIpOs5qq-o","colab_type":"code","colab":{}},"source":["FLICKR_PUBLIC = 'your flickr key'  #flickr key\n","FLICKR_SECRET = 'your flickr secret'        #flickr secret"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"NKJ1zgcwrXTD","colab_type":"text"},"source":["#### Get URLs of photos"]},{"cell_type":"code","metadata":{"id":"K3pZlAJPL7Q7","colab_type":"code","colab":{}},"source":["tags_1 = ['monster hunter world','tomb raider','google','ocean','ECNU','sky','street']\n","tags_2 = ['kite','eagle','vulture','owl','European fire salamander','newt',\n","          'eft','axolotl','bullfrog','tree frog','tailed frog','loggerhead turtle',\n","          'leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea',\n","          'mud turtle','terrapin','box turtle','banded gecko','common iguana','American chameleon',\n","          'whiptail','agama','frilled lizard']\n","get_photos_from_flickr(FLICKR_PUBLIC,FLICKR_SECRET,tags_1)\n","get_photos_from_flickr(FLICKR_PUBLIC,FLICKR_SECRET,tags_2)\n","\n","# photos = cats['photos']\n","# from pprint import pprint\n","# pprint(photos)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"p_RC-8x2qdUi","colab_type":"text"},"source":["### Analyze the pictures with google api"]},{"cell_type":"code","metadata":{"id":"THwU99MTUPXk","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596516737283,"user_tz":-480,"elapsed":914,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["def detect_label(image_name):\n","  \"\"\"Detects label in the file.\"\"\"\n","  client = vision.ImageAnnotatorClient()\n","\n","  with io.open('/content/flickr_pics/'+image_name, 'rb') as image_file:   #字节流的形式读入图片\n","    content = image_file.read()  \n","\n","  image = vision.types.Image(content=content)\n","  # print('Image byte size: ',image.ByteSize)\n","\n","  response = client.label_detection(image=image)\n","  image_info = {}\n","  for label in response.label_annotations:\n","    # print('The possibility of the image represents/contains {} is {:.2f}%'.format(label.description,label.score*100.))\n","    try:\n","      image_info[image_name].append((label.description,label.score))\n","    except Exception as e:\n","      image_info[image_name] = [(label.description,label.score)]\n","  print('Image {} analysis done!!'.format(image_name))\n","  \n","  return response,image_info"],"execution_count":73,"outputs":[]},{"cell_type":"code","metadata":{"id":"wJV-fVZZjV_b","colab_type":"code","colab":{}},"source":["# image_name = 'ECNU_1.jpeg'\n","# response_test,image_info_test = detect_label(image_name)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EhwjbvDdlqgc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":185},"executionInfo":{"status":"ok","timestamp":1596516761019,"user_tz":-480,"elapsed":4861,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"8543aad8-e0d9-4abd-a605-f25c26a94e41"},"source":["image_count = 0    #Because the usage of Google API will incur cost, so I don't want to spend to much money on this.\n","image_info_total = {}\n","\n","for image in os.listdir('/content/flickr_pics'):\n","  if image_count == 10:\n","    break\n","  else:\n","    image_count += 1\n","  _,image_info = detect_label(image)\n","  image_info_total[image] = image_info[image]"],"execution_count":74,"outputs":[{"output_type":"stream","text":["Image google_2.jpeg analysis done!!\n","Image agama_1.jpeg analysis done!!\n","Image leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea_3.jpeg analysis done!!\n","Image frilled lizard_1.jpeg analysis done!!\n","Image mud turtle_3.jpeg analysis done!!\n","Image eagle_1.jpeg analysis done!!\n","Image terrapin_3.jpeg analysis done!!\n","Image kite_3.jpeg analysis done!!\n","Image eagle_2.jpeg analysis done!!\n","Image tomb raider_1.jpeg analysis done!!\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8GjMqYl-rPyO","colab_type":"code","colab":{}},"source":["# image_info_total"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1e5Ou1Pm0a8x","colab_type":"text"},"source":["### Show results"]},{"cell_type":"code","metadata":{"id":"uaOYkckVtYLS","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596516773061,"user_tz":-480,"elapsed":2262,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}}},"source":["def show_results(image_info_total,image_name):\n","  img = Image.open('/content/flickr_pics/'+image_name)\n","  img = np.array(img)\n","  plt.imshow(img)\n","  plt.axis('off')\n","\n","  info = image_info_total[image_name]\n","  for tag,score in info:\n","    print('The possibility of the image represents/contains {} is {:.2f}%'.format(tag,score*100.))"],"execution_count":75,"outputs":[]},{"cell_type":"code","metadata":{"id":"yM0_-Ou4yLPP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":416},"executionInfo":{"status":"ok","timestamp":1596516806831,"user_tz":-480,"elapsed":3288,"user":{"displayName":"丁予哲","photoUrl":"","userId":"16037546515760542795"}},"outputId":"7772ea00-02f4-4cb2-e016-cc811d97b614"},"source":["show_results(image_info_total,'tomb raider_1.jpeg')"],"execution_count":77,"outputs":[{"output_type":"stream","text":["The possibility of the image represents/contains Tree is 96.49%\n","The possibility of the image represents/contains Nature is 96.34%\n","The possibility of the image represents/contains Natural environment is 93.45%\n","The possibility of the image represents/contains Sunlight is 90.50%\n","The possibility of the image represents/contains Forest is 90.14%\n","The possibility of the image represents/contains Light is 88.71%\n","The possibility of the image represents/contains Branch is 87.52%\n","The possibility of the image represents/contains Woodland is 86.58%\n","The possibility of the image represents/contains Jungle is 86.41%\n","The possibility of the image represents/contains Biome is 84.28%\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"uJD5trNYyepU","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}